Полезные ссылки:
1. Создание блок-диаграмм https://products.aspose.app/diagram/ru/flowchart

Task Manager
Цель создать pet проект, для отработки навыков по следующему стеку технологий: 
1. GIT
2. Go 
3. PSQL
4. HTML/CSS/JS
5. REST-API

Стадии: 
1. Создание технического рисунка макета прокта
2. Проработка стека планируемых для использования технологий
3. Проработка структуры задачи
4. Проработка необходимых таблицы для создания БД, с учетом структуры задач
5. Создание проекта Go, который будет состоять из 2-х основных частей:
    - http-сервер, с поддержкой REST-API
    - ORM (Object-Relational Mapping) модуль, описывающий CRUD-задачи для работы с БД.
6. Создание WEB-интерфейса для CRUD операций с задачами.
7. Отладка/доведение/расширение(выполняется на каждом пункте).

### Таблица users
|-------------------|-----------------------|-------------------------------------------------------------------------|
| Поле              | Тип данных            | Описание                                                                |
|-------------------|-----------------------|-------------------------------------------------------------------------|
| id                | SERIAL                | Уникальный идентификатор пользователя. Автоинкремент.(PRIMARY KEY)      |
| username          | VARCHAR(50)           | Имя пользователя. Ограничение по длине (например, 50 символов).         |
| password_hash     | VARCHAR(255)          | Хэш пароля для безопасности. Подходит размер для хранения хеша.         |
| created_at        | TIMESTAMP             | Дата и время создания аккаунта. По умолчанию текущая дата/время.        |
|-------------------|-----------------------|-------------------------------------------------------------------------|

CREATE TABLE IF NOT EXISTS users (
id SERIAL PRIMARY KEY, --Уникальный идентификатор пользователя. Автоинкремент. (PRIMARY KEY)
username VARCHAR(50) NOT NULL, --Имя пользователя. Ограничение по длине 50 символов.
password_hash VARCHAR(255) NOT NULL, --Хэш пароля для безопасности.
created_at TIMESTAMP NOT NULL DEFAULT current_timestamp, --дата и время создания аккаунта, по умолчанию текущая дата/время.
UNIQUE(username)
);


### Свои типы
CREATE TYPE task_status AS ENUM('in progress', 'completed'); - статус выполнения задачи
CREATE TYPE task_priority  AS ENUM('no matter', 'normal', 'important'); -важность задачи

### Таблица tasks
|-------------------|-----------------------|-------------------------------------------------------------------------------------------------------|
| Поле              | Тип данных            | Описание                                                                                              |
|-------------------|-----------------------|-------------------------------------------------------------------------------------------------------|
| id                | SERIAL                | Уникальный идентификатор задачи. Автоинкремент.                                                       |
| title             | VARCHAR(255)          | Заголовок задачи. Ограничение по длине (например, 255 символов).                                      |
| description       | TEXT                  | Описание задачи (необязательно). Подходит для хранения длинных текстов.                               |
| due_date          | TIMESTAMP             | Срок выполнения задачи (необязательно). Можно использовать DATETIME для хранения времени.             |
| status            | task_status           | Статус задачи 'in progress', 'completed'.                                                             |
| priority          | task_priority         | Важность задачи 'no matter', 'normal', 'important'.                                                   |
| created_at        | TIMESTAMP             | Дата и время создания задачи. По умолчанию текущая дата/время.                                        |
| updated_at        | TIMESTAMP             | Дата и время последнего обновления задачи (необязательно). По умолчанию текущая дата/время.           |
|-------------------|-----------------------|-------------------------------------------------------------------------------------------------------|
CREATE TABLE IF NOT EXISTS tasks (
    id SERIAL PRIMARY KEY, --Уникальный идентификатор задачи, автоинкремент.
    title VARCHAR(255) NOT NULL, --Заголовок задачи. Ограничение по длине 255 символов.
    description TEXT, --Описание задачи(необзятально).
    due_date TIMESTAMP, -- срок выполнения задачи(необзятельно).
    status task_status DEFAULT 'in progress', --Статус задачи 'in progress', 'completed'.
    priority task_priority DEFAULT 'normal', --Важность задачи 'no matter', 'normal', 'important'.
    created_at TIMESTAMP NOT NULL DEFAULT current_timestamp, --Дата и время создания задачи. По умолчанию текущая дата/время.
    updated_at TIMESTAMP DEFAULT current_timestamp --Дата и время последнего обновления задачи (необязательно). По умолчанию текущая дата/время.
);

## Таблица нормализации user_tasks
|-------------------|-----------------------|-------------------------------------------------------------------------------------------------------|
| Поле              | Тип данных            | Описание                                                                                              |
|-------------------|-----------------------|-------------------------------------------------------------------------------------------------------|
| id                | SERIAL                | Уникальный идентификатор. Автоинкремент. Первичный ключ.                                              |
| user_id           | INT                   | Идентификатор пользователя                                                                            |
| task_id           | INT                   | Идентификатор задачи                                                                                  |
|-------------------|-----------------------|-------------------------------------------------------------------------------------------------------|
CREATE TABLE IF NOT EXISTS user_tasks(
    id SERIAL PRIMARY KEY, --Первичный ключ
    user_id INT NOT NULL, --Идентификатор пользователя  
    task_id INT NOT NULL, --Идентификатор задачи  
    UNIQUE (user_id, task_id)
);